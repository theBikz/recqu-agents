{"version":3,"file":"enum.cjs","sources":["../../../src/common/enum.ts"],"sourcesContent":["/**\n * Enum representing the various event types emitted during the execution of runnables.\n * These events provide real-time information about the progress and state of different components.\n *\n * @enum {string}\n */\nexport enum GraphEvents {\n  /* Custom Events */\n\n  /** [Custom] Delta event for run steps (message creation and tool calls) */\n  ON_RUN_STEP = 'on_run_step',\n  /** [Custom] Delta event for run steps (tool calls) */\n  ON_RUN_STEP_DELTA = 'on_run_step_delta',\n  /** [Custom] Completed event for run steps (tool calls) */\n  ON_RUN_STEP_COMPLETED = 'on_run_step_completed',\n  /** [Custom] Delta events for messages */\n  ON_MESSAGE_DELTA = 'on_message_delta',\n  /** [Custom] Reasoning Delta events for messages */\n  ON_REASONING_DELTA = 'on_reasoning_delta',\n\n  /* Official Events */\n\n  /** Custom event, emitted by system */\n  ON_CUSTOM_EVENT = 'on_custom_event',\n  /** Emitted when a chat model starts processing. */\n  CHAT_MODEL_START = 'on_chat_model_start',\n\n  /** Emitted when a chat model streams a chunk of its response. */\n  CHAT_MODEL_STREAM = 'on_chat_model_stream',\n\n  /** Emitted when a chat model completes its processing. */\n  CHAT_MODEL_END = 'on_chat_model_end',\n\n  /** Emitted when a language model starts processing. */\n  LLM_START = 'on_llm_start',\n\n  /** Emitted when a language model streams a chunk of its response. */\n  LLM_STREAM = 'on_llm_stream',\n\n  /** Emitted when a language model completes its processing. */\n  LLM_END = 'on_llm_end',\n\n  /** Emitted when a chain starts processing. */\n  CHAIN_START = 'on_chain_start',\n\n  /** Emitted when a chain streams a chunk of its output. */\n  CHAIN_STREAM = 'on_chain_stream',\n\n  /** Emitted when a chain completes its processing. */\n  CHAIN_END = 'on_chain_end',\n\n  /** Emitted when a tool starts its operation. */\n  TOOL_START = 'on_tool_start',\n\n  /** Emitted when a tool completes its operation. */\n  TOOL_END = 'on_tool_end',\n\n  /** Emitted when a retriever starts its operation. */\n  RETRIEVER_START = 'on_retriever_start',\n\n  /** Emitted when a retriever completes its operation. */\n  RETRIEVER_END = 'on_retriever_end',\n\n  /** Emitted when a prompt starts processing. */\n  PROMPT_START = 'on_prompt_start',\n\n  /** Emitted when a prompt completes its processing. */\n  PROMPT_END = 'on_prompt_end'\n}\n\nexport enum Providers {\n  OPENAI = 'openAI',\n  BEDROCK_LEGACY = 'bedrock_legacy',\n  VERTEXAI = 'vertexai',\n  BEDROCK = 'bedrock',\n  ANTHROPIC = 'anthropic',\n  MISTRALAI = 'mistralai',\n  OLLAMA = 'ollama',\n  GOOGLE = 'google',\n  AZURE = 'azureOpenAI',\n  DEEPSEEK = 'deepseek',\n  OPENROUTER = 'openrouter',\n}\n\nexport enum GraphNodeKeys {\n  TOOLS = 'tools',\n  AGENT = 'agent',\n  PRE_TOOLS = 'pre_tools',\n  POST_TOOLS = 'post_tools',\n}\n\nexport enum GraphNodeActions {\n  TOOL_NODE = 'tool_node',\n  CALL_MODEL = 'call_model',\n  ROUTE_MESSAGE = 'route_message',\n}\n\nexport enum CommonEvents {\n  LANGGRAPH = 'LangGraph',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation'\n}\n\nexport enum ContentTypes {\n  TEXT = 'text',\n  THINK = 'think',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  ERROR = 'error',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n\nexport enum Callback {\n  TOOL_ERROR = 'handleToolError',\n  TOOL_START = 'handleToolStart',\n  TOOL_END = 'handleToolEnd',\n  /*\n  LLM_START = 'handleLLMStart',\n  LLM_NEW_TOKEN = 'handleLLMNewToken',\n  LLM_ERROR = 'handleLLMError',\n  LLM_END = 'handleLLMEnd',\n  CHAT_MODEL_START = 'handleChatModelStart',\n  CHAIN_START = 'handleChainStart',\n  CHAIN_ERROR = 'handleChainError',\n  CHAIN_END = 'handleChainEnd',\n  TEXT = 'handleText',\n  AGENT_ACTION = 'handleAgentAction',\n  AGENT_END = 'handleAgentEnd',\n  RETRIEVER_START = 'handleRetrieverStart',\n  RETRIEVER_END = 'handleRetrieverEnd',\n  RETRIEVER_ERROR = 'handleRetrieverError',\n  CUSTOM_EVENT = 'handleCustomEvent'\n  */\n}\n\nexport enum Constants {\n  OFFICIAL_CODE_BASEURL = 'https://api.librechat.ai/v1',\n  EXECUTE_CODE = 'execute_code',\n  CONTENT_AND_ARTIFACT = 'content_and_artifact',\n}\n\nexport enum EnvVar {\n  CODE_API_KEY = 'LIBRECHAT_CODE_API_KEY',\n  CODE_BASEURL = 'LIBRECHAT_CODE_BASEURL'\n}\n"],"names":["GraphEvents","Providers","GraphNodeKeys","GraphNodeActions","CommonEvents","StepTypes","ContentTypes","ToolCallTypes","Callback","Constants","EnvVar"],"mappings":"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"}