{"version":3,"file":"run.cjs","sources":["../../src/run.ts"],"sourcesContent":["// src/run.ts\nimport { PromptTemplate } from '@langchain/core/prompts';\nimport { AzureChatOpenAI, ChatOpenAI } from '@langchain/openai';\nimport type { BaseMessage, MessageContentComplex } from '@langchain/core/messages';\nimport type { ClientCallbacks, SystemCallbacks } from '@/graphs/Graph';\nimport type { RunnableConfig } from '@langchain/core/runnables';\nimport type * as t from '@/types';\nimport { GraphEvents, Providers, Callback } from '@/common';\nimport { manualToolStreamProviders } from '@/llm/providers';\nimport { createTitleRunnable } from '@/utils/title';\nimport { StandardGraph } from '@/graphs/Graph';\nimport { HandlerRegistry } from '@/events';\nimport { isOpenAILike } from '@/utils/llm';\n\nexport class Run<T extends t.BaseGraphState> {\n  graphRunnable?: t.CompiledWorkflow<T, Partial<T>, string>;\n  // private collab!: CollabGraph;\n  // private taskManager!: TaskManager;\n  private handlerRegistry: HandlerRegistry;\n  id: string;\n  Graph: StandardGraph | undefined;\n  provider: Providers | undefined;\n  returnContent: boolean = false;\n\n  private constructor(config: Partial<t.RunConfig>) {\n    const runId = config.runId ?? '';\n    if (!runId) {\n      throw new Error('Run ID not provided');\n    }\n\n    this.id = runId;\n\n    const handlerRegistry = new HandlerRegistry();\n\n    if (config.customHandlers) {\n      for (const [eventType, handler] of Object.entries(config.customHandlers)) {\n        handlerRegistry.register(eventType, handler);\n      }\n    }\n\n    this.handlerRegistry = handlerRegistry;\n\n    if (!config.graphConfig) {\n      throw new Error('Graph config not provided');\n    }\n\n    if (config.graphConfig.type === 'standard' || !config.graphConfig.type) {\n      this.provider = config.graphConfig.llmConfig.provider;\n      this.graphRunnable = this.createStandardGraph(config.graphConfig) as unknown as t.CompiledWorkflow<T, Partial<T>, string>;\n      if (this.Graph) {\n        this.Graph.handlerRegistry = handlerRegistry;\n      }\n    }\n\n    this.returnContent = config.returnContent ?? false;\n  }\n\n  private createStandardGraph(config: t.StandardGraphConfig): t.CompiledWorkflow<t.IState, Partial<t.IState>, string> {\n    const { llmConfig, tools = [], ...graphInput } = config;\n    const { provider, ...clientOptions } = llmConfig;\n\n    const standardGraph = new StandardGraph({\n      tools,\n      provider,\n      clientOptions,\n      ...graphInput,\n      runId: this.id,\n    });\n    this.Graph = standardGraph;\n    return standardGraph.createWorkflow();\n  }\n\n  static async create<T extends t.BaseGraphState>(config: t.RunConfig): Promise<Run<T>> {\n    return new Run<T>(config);\n  }\n\n  getRunMessages(): BaseMessage[] | undefined {\n    if (!this.Graph) {\n      throw new Error('Graph not initialized. Make sure to use Run.create() to instantiate the Run.');\n    }\n    return this.Graph.getRunMessages();\n  }\n\n  async processStream(\n    inputs: t.IState,\n    config: Partial<RunnableConfig> & { version: 'v1' | 'v2'; run_id?: string },\n    streamOptions?: t.EventStreamOptions,\n  ): Promise<MessageContentComplex[] | undefined> {\n    if (!this.graphRunnable) {\n      throw new Error('Run not initialized. Make sure to use Run.create() to instantiate the Run.');\n    }\n    if (!this.Graph) {\n      throw new Error('Graph not initialized. Make sure to use Run.create() to instantiate the Run.');\n    }\n\n    this.Graph.resetValues(streamOptions?.keepContent);\n    const provider = this.Graph.provider;\n    const hasTools = this.Graph.tools ? this.Graph.tools.length > 0 : false;\n    if (streamOptions?.callbacks) {\n      /* TODO: conflicts with callback manager */\n      const callbacks = config.callbacks as t.ProvidedCallbacks ?? [];\n      config.callbacks = callbacks.concat(this.getCallbacks(streamOptions.callbacks));\n    }\n\n    if (!this.id) {\n      throw new Error('Run ID not provided');\n    }\n\n    config.run_id = this.id;\n    config.configurable = Object.assign(config.configurable ?? {}, { run_id: this.id, provider: this.provider });\n\n    const stream = this.graphRunnable.streamEvents(inputs, config);\n\n    for await (const event of stream) {\n      const { data, name, metadata, ...info } = event;\n\n      let eventName: t.EventName = info.event;\n      if (hasTools && manualToolStreamProviders.has(provider) && eventName === GraphEvents.CHAT_MODEL_STREAM) {\n        /* Skipping CHAT_MODEL_STREAM event due to double-call edge case */\n        continue;\n      }\n\n      if (eventName && eventName === GraphEvents.ON_CUSTOM_EVENT) {\n        eventName = name;\n      }\n\n      const handler = this.handlerRegistry.getHandler(eventName);\n      if (handler) {\n        handler.handle(eventName, data, metadata, this.Graph);\n      }\n    }\n\n    if (this.returnContent) {\n      return this.Graph.getContentParts();\n    }\n  }\n\n  private createSystemCallback<K extends keyof ClientCallbacks>(\n    clientCallbacks: ClientCallbacks,\n    key: K\n  ): SystemCallbacks[K] {\n    return ((...args: unknown[]) => {\n      const clientCallback = clientCallbacks[key];\n      if (clientCallback && this.Graph) {\n        (clientCallback as (...args: unknown[]) => void)(this.Graph, ...args);\n      }\n    }) as SystemCallbacks[K];\n  }\n\n  getCallbacks(clientCallbacks: ClientCallbacks): SystemCallbacks {\n    return {\n      [Callback.TOOL_ERROR]: this.createSystemCallback(clientCallbacks, Callback.TOOL_ERROR),\n      [Callback.TOOL_START]: this.createSystemCallback(clientCallbacks, Callback.TOOL_START),\n      [Callback.TOOL_END]: this.createSystemCallback(clientCallbacks, Callback.TOOL_END),\n    };\n  }\n\n  async generateTitle({\n    inputText,\n    contentParts,\n    titlePrompt,\n    clientOptions,\n    chainOptions,\n    skipLanguage,\n  } : {\n    inputText: string;\n    contentParts: (t.MessageContentComplex | undefined)[];\n    titlePrompt?: string;\n    skipLanguage?: boolean;\n    clientOptions?: t.ClientOptions;\n    chainOptions?: Partial<RunnableConfig> | undefined;\n  }): Promise<{ language: string; title: string }> {\n    const convoTemplate = PromptTemplate.fromTemplate('User: {input}\\nAI: {output}');\n    const response = contentParts.map((part) => {\n      if (part?.type === 'text') return part.text;\n      return '';\n    }).join('\\n');\n    const convo = (await convoTemplate.invoke({ input: inputText, output: response })).value;\n    const model = this.Graph?.getNewModel({\n      clientOptions,\n      omitOriginalOptions: ['streaming'],\n    });\n    if (!model) {\n      return { language: '', title: '' };\n    }\n    if (isOpenAILike(this.provider) && (model instanceof ChatOpenAI || model instanceof AzureChatOpenAI)) {\n      model.temperature = (clientOptions as t.OpenAIClientOptions | undefined)?.temperature as number;\n      model.topP = (clientOptions as t.OpenAIClientOptions | undefined)?.topP as number;\n      model.frequencyPenalty = (clientOptions as t.OpenAIClientOptions | undefined)?.frequencyPenalty as number;\n      model.presencePenalty = (clientOptions as t.OpenAIClientOptions | undefined)?.presencePenalty as number;\n      model.n = (clientOptions as t.OpenAIClientOptions | undefined)?.n as number;\n    }\n    const chain = await createTitleRunnable(model, titlePrompt);\n    return await chain.invoke({ convo, inputText, skipLanguage }, chainOptions) as { language: string; title: string };\n  }\n}\n"],"names":["HandlerRegistry","StandardGraph","manualToolStreamProviders","GraphEvents","Callback","PromptTemplate","isOpenAILike","ChatOpenAI","AzureChatOpenAI","createTitleRunnable"],"mappings":"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"}