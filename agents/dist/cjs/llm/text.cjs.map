{"version":3,"file":"text.cjs","sources":["../../../src/llm/text.ts"],"sourcesContent":["/* eslint-disable no-console */\nexport interface TextStreamOptions {\n  minChunkSize?: number;\n  maxChunkSize?: number;\n  delay?: number;\n  firstWordChunk?: boolean;\n}\n\nexport type ProgressCallback = (chunk: string) => void;\nexport type PostChunkCallback = (chunk: string) => void;\n\nexport class TextStream {\n  private text: string;\n  private currentIndex: number;\n  private minChunkSize: number;\n  private maxChunkSize: number;\n  private delay: number;\n  private firstWordChunk: boolean;\n\n  constructor(text: string, options: TextStreamOptions = {}) {\n    this.text = text;\n    this.currentIndex = 0;\n    this.minChunkSize = options.minChunkSize ?? 4;\n    this.maxChunkSize = options.maxChunkSize ?? 8;\n    this.delay = options.delay ?? 20;\n    this.firstWordChunk = options.firstWordChunk ?? true;\n  }\n\n  private randomInt(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  private static readonly BOUNDARIES = new Set([' ', '.', ',', '!', '?', ';', ':']);\n\n  private findFirstWordBoundary(text: string, minSize: number): number {\n    if (minSize >= text.length) return text.length;\n\n    // Ensure we meet the minimum size first\n    let pos = minSize;\n\n    // Look forward until we find a boundary\n    while (pos < text.length) {\n      if (TextStream.BOUNDARIES.has(text[pos])) {\n        return pos + 1; // Include the boundary character\n      }\n      pos++;\n    }\n\n    return text.length; // If no boundary found, return entire remaining text\n  }\n\n  async *generateText(progressCallback?: ProgressCallback): AsyncGenerator<string, void, unknown> {\n    const { delay, minChunkSize, maxChunkSize } = this;\n\n    while (this.currentIndex < this.text.length) {\n      await new Promise(resolve => setTimeout(resolve, delay));\n\n      const remainingText = this.text.slice(this.currentIndex);\n      let chunkSize: number;\n\n      if (this.firstWordChunk) {\n        chunkSize = this.findFirstWordBoundary(remainingText, minChunkSize);\n      } else {\n        const remainingChars = remainingText.length;\n        chunkSize = Math.min(this.randomInt(minChunkSize, maxChunkSize + 1), remainingChars);\n      }\n\n      const chunk = this.text.slice(this.currentIndex, this.currentIndex + chunkSize);\n      progressCallback?.(chunk);\n\n      yield chunk;\n      this.currentIndex += chunkSize;\n    }\n  }\n}"],"names":[],"mappings":";;MAWa,UAAU,CAAA;AACb,IAAA,IAAI;AACJ,IAAA,YAAY;AACZ,IAAA,YAAY;AACZ,IAAA,YAAY;AACZ,IAAA,KAAK;AACL,IAAA,cAAc;IAEtB,WAAY,CAAA,IAAY,EAAE,OAAA,GAA6B,EAAE,EAAA;AACvD,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI;AAChB,QAAA,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE;QAChC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,IAAI,IAAI;;IAG9C,SAAS,CAAC,GAAW,EAAE,GAAW,EAAA;AACxC,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;;IAG9C,OAAgB,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAEzE,qBAAqB,CAAC,IAAY,EAAE,OAAe,EAAA;AACzD,QAAA,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,MAAM;;QAG9C,IAAI,GAAG,GAAG,OAAO;;AAGjB,QAAA,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;AACxB,YAAA,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;AACxC,gBAAA,OAAO,GAAG,GAAG,CAAC,CAAC;;AAEjB,YAAA,GAAG,EAAE;;AAGP,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC;;AAGrB,IAAA,OAAO,YAAY,CAAC,gBAAmC,EAAA;QACrD,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,IAAI;QAElD,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC3C,YAAA,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAExD,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;AACxD,YAAA,IAAI,SAAiB;AAErB,YAAA,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,YAAY,CAAC;;iBAC9D;AACL,gBAAA,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM;AAC3C,gBAAA,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC;;AAGtF,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;AAC/E,YAAA,gBAAgB,GAAG,KAAK,CAAC;AAEzB,YAAA,MAAM,KAAK;AACX,YAAA,IAAI,CAAC,YAAY,IAAI,SAAS;;;;;;;"}